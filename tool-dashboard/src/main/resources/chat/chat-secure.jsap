{
	"host": "localhost",
	"oauth": {
		"enable": true,
		"register": "https://localhost:8443/oauth/register",
		"tokenRequest": "https://localhost:8443/oauth/token",
		"client_id": "Jxo4sYqGc0pGKES4V3YY/Q==",
		"client_secret": "Jxo4sYqGc0pGKES4V3YY/Q==",
		"jwt": "xabtQWoH8RJJk1FyKJ78J8h8i2PcWmAugfJ4J6nMd+2lNivt5y9E4M+NWnH70aTRfI5GVokEbCFTKvs4mgObdsqTIe6+j8hWRnZM8muS1a9JsaTMXgpl00IoUi/PEkJdkZMYbpTJkwJUGwP4FEGrGN8grcIapcbGwhKzW+XQ5THLd8hacTrXa13rZKlO0ziNfJRnXnLVMxaHJbeEMVupvf1pzkxEpB+uSYJqDRtusfhq6e7vn8wSIUZqnCuJRv+MN40u9H6FI/lueUHr9EZWcuw5AT4nBv0QSNUlGR0KUguxJisdapnpnNgUj1fcqMcWzTFEtronm9PgZ/Cbksi7wNfbVpkiEQBi8oQQlYKqw/H8ds3IjrDu0Z4Ns200Ql9EGr3RBAhegjLq49mln240x31h6R0hGEbYFkCrirapXrHDDyCd9T9eLuENsKjvJj69MtnrK+OMUrOnhUm56FkuiO2v0BNCxR77vAKSPtycGssvE963X+hPgyx86vSO/Q25vSR8woSUOa27gKN8pqNcfdDu1pDtJB4L8w4aFUEdAQMbCVYgn+bsajwkYUYxLlGDEr+21u1goY4umw5a65iDdhG3khzjGkwc0P4hsNX4ScJ2fA5uBSj49qirVbO3zfsQZ4HQ2NXNAp+xwdIDKkHy/ROu+TFN5Emddd6zRp0SWmo09LrL/cCnnZ4yXt3rgGNAuJX7IWoE45g+RpKuwa5kOMYLe7iD8nbv9juJpm3CZgg=",
		"expires": "x0CuXHr/6x0SAfbbPyFdag==",
		"type": "XPrHEX2xHy+5IuXHPHigMw=="
	},
	"sparql11protocol": {
		"protocol": "https",
		"port": 8443,
		"query": {
			"path": "/secure/query",
			"method": "POST",
			"format": "JSON"
		},
		"update": {
			"path": "/secure/update",
			"method": "POST",
			"format": "JSON"
		}
	},
	"sparql11seprotocol": {
		"protocol": "wss",
		"availableProtocols": {
			"ws": {
				"port": 9000,
				"path": "/subscribe"
			},
			"wss": {
				"port": 9443,
				"path": "/secure/subscribe"
			}
		}
	},
	"extended": {
		"type": "basic",
		"base": 0,
		"clients": 2,
		"messages": 1
	},
	"graphs": {
		"default-graph-uri": "http://wot.arces.unibo.it/chat/",
		"named-graph-uri": "http://wot.arces.unibo.it/chat/",
		"using-graph-uri": "http://wot.arces.unibo.it/chat/",
		"using-named-graph-uri": "http://wot.arces.unibo.it/chat/"
	},
	"namespaces": {
		"schema": "http://schema.org/",
		"rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
		"chat": "http://wot.arces.unibo.it/chat#"
	},
	"updates": {
		"SEND": {
			"sparql": "INSERT {_:message rdf:type schema:Message ; schema:text ?text ; schema:sender ?sender ; schema:toRecipient ?receiver; schema:dateSent ?time} WHERE {?sender rdf:type schema:Person . ?receiver rdf:type schema:Person BIND(STR(now()) AS ?time)}",
			"forcedBindings": {
				"text": {
					"type": "literal",
					"value": "Ciao!"
				},
				"sender": {
					"type": "uri",
					"value": "chat:IamASender"
				},
				"receiver": {
					"type": "uri",
					"value": "chat:IamAReceiver"
				}
			}
		},
		"SET_RECEIVED": {
			"sparql": "INSERT {?message schema:dateReceived ?time} WHERE {?message rdf:type schema:Message BIND(STR(now()) AS ?time)}",
			"forcedBindings": {
				"message": {
					"type": "uri",
					"value": "chat:ThisIsAMessage"
				}
			}
		},
		"REMOVE": {
			"sparql": "DELETE {?message ?p ?o} WHERE {?message rdf:type schema:Message ; ?p ?o}",
			"forcedBindings": {
				"message": {
					"type": "uri",
					"value": "chat:ThisIsAMessage"
				}
			}
		},
		"STORE_SENT": {
			"sparql": "INSERT DATA {?message schema:text ?text ; schema:sender ?sender ; schema:toRecipient ?receiver; schema:dateSent ?dateSent}",
			"forcedBindings": {
				"dateSent": {
					"type": "literal",
					"value": "2018-06-28T00:00:00",
					"datatype": "xsd:dateTime"
				},
				"message": {
					"type": "uri",
					"value": "chat:ThisIsAMessage"
				},
				"text": {
					"type": "literal",
					"value": "A message to be stored"
				},
				"sender": {
					"type": "uri",
					"value": "chat:IAmASender"
				},
				"receiver": {
					"type": "uri",
					"value": "chat:IAmAReceiver"
				}
			},
			"graphs": {
				"using-graph-uri": "http://wot.arces.unibo.it/chat/log",
				"using-named-graph-uri": "http://wot.arces.unibo.it/chat/log"
			}
		},
		"STORE_RECEIVED": {
			"sparql": "INSERT DATA {?message schema:dateReceived ?dateReceived}",
			"forcedBindings": {
				"dateReceived": {
					"type": "literal",
					"value": "2018-06-28T00:00:00",
					"datatype": "xsd:dateTime"
				},
				"message": {
					"type": "uri",
					"value": "chat:ThisIsAMessage"
				}
			},
			"graphs": {
				"using-graph-uri": "http://wot.arces.unibo.it/chat/log",
				"using-named-graph-uri": "http://wot.arces.unibo.it/chat/log"
			}
		},
		"REGISTER_USER": {
			"sparql": "DELETE {?x rdf:type schema:Person . ?x schema:name ?userName} INSERT {_:id rdf:type schema:Person ; schema:name ?userName}  WHERE {OPTIONAL {?x rdf:type schema:Person . ?x schema:name ?userName}}",
			"forcedBindings": {
				"userName": {
					"type": "literal",
					"value": "My user name"
				}
			}
		},
		"DELETE_ALL": {
			"sparql": "DELETE {?s ?p ?o} WHERE {?s ?p ?o}"
		}
	},
	"queries": {
		"SENT": {
			"sparql": "SELECT ?message ?sender ?name ?text ?time WHERE {?message rdf:type schema:Message ; schema:text ?text ; schema:sender ?sender ; schema:toRecipient ?receiver ; schema:dateSent ?time . ?sender rdf:type schema:Person ; schema:name ?name . ?receiver rdf:type schema:Person} ORDER BY ?time",
			"forcedBindings": {
				"receiver": {
					"type": "uri",
					"value": "chat:IAmAReceiver"
				}
			}
		},
		"RECEIVED": {
			"sparql": "SELECT ?message ?time WHERE {?message schema:sender ?sender ; schema:dateReceived ?time ; rdf:type schema:Message}",
			"forcedBindings": {
				"sender": {
					"type": "uri",
					"value": "chat:IAmASender"
				}
			}
		},
		"LOG_SENT": {
			"sparql": "SELECT ?message ?sender ?receiver ?text ?dateSent WHERE {?message schema:text ?text ; schema:sender ?sender ; schema:toRecipient ?receiver; schema:dateSent ?dateSent}",
			"graphs": {
				"default-graph-uri": "http://wot.arces.unibo.it/chat/log/",
				"named-graph-uri": "http://wot.arces.unibo.it/chat/log/"
			}
		},
		"LOG_RECEIVED": {
			"sparql": "SELECT ?message ?dateReceived WHERE {?message schema:dateReceived ?dateReceived}",
			"graphs": {
				"default-graph-uri": "http://wot.arces.unibo.it/chat/log/",
				"named-graph-uri": "http://wot.arces.unibo.it/chat/log/"
			}
		},
		"USERS": {
			"sparql": "SELECT ?user ?userName WHERE {?user rdf:type schema:Person ; schema:name ?userName}"
		},
		"QUERY_ALL": {
			"sparql": "SELECT * WHERE {?s ?p ?o}"
		}
	}
}